{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/MasterDevSS4.ReactJS/master-dev-data/src/component-import/ComponentImport.js\";\nimport React, { Component } from \"react\";\nimport \"./ComponentImport.css\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ComponentImport extends Component {\n  render() {\n    // const fileData = {};\n    // const processExcelFile = (data) => {\n    //   var worlkBook = XLSX.read(data, { type: \"binary \" });\n    //   const wsName = worlkBook.SheetNames[0];\n    //   const ws = worlkBook.Sheets[wsName];\n    //   const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 });\n    //   console.log({ dataParse });\n    //   // var AllSheetName = worlkBook.SheetNames;\n    //   debugger;\n    // };\n    // const fileSelect = (e) => {\n    //   const files = e.target.files;\n    //   fileData[\"fileName\"] = files[0].name;\n    //   const reader = new FileReader();\n    //   if (typeof FileList != \"undefined\") {\n    //     if (reader.readAsBinaryString) {\n    //       reader.onload = function (e) {\n    //         processExcelFile(e.target.result);\n    //       };\n    //     }\n    //   } else {\n    //     reader.onload = function (e) {\n    //       const data = \"\";\n    //       const bytes = new Uint8Array(e.target.result);\n    //       for (var i = 0; i < bytes.byteLength; i++) {\n    //         data += String.fromCharCode(bytes[i]);\n    //       }\n    //       processExcelFile(data);\n    //     };\n    //   }\n    //   // console.log(files);\n    // };\n    //f = file\n    var name = f.name;\n    const reader = new FileReader();\n\n    reader.onload = evt => {\n      // evt = on_file_select event\n\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, {\n        type: \"binary\"\n      });\n      /* Get first worksheet */\n\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n\n      const data = XLSX.utils.sheet_to_csv(ws, {\n        header: 1\n      });\n      /* Update state */\n\n      console.log(\"Data>>>\" + data);\n    };\n\n    reader.readAsBinaryString(f);\n\n    const fileSelect = e => {};\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: fileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\nexport default ComponentImport;","map":{"version":3,"names":["React","Component","XLSX","ComponentImport","render","name","f","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_csv","header","console","log","readAsBinaryString","fileSelect","e"],"sources":["/Users/user/Documents/MasterDevSS4.ReactJS/master-dev-data/src/component-import/ComponentImport.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./ComponentImport.css\";\nimport * as XLSX from \"xlsx\";\n\nexport class ComponentImport extends Component {\n  render() {\n    // const fileData = {};\n\n    // const processExcelFile = (data) => {\n    //   var worlkBook = XLSX.read(data, { type: \"binary \" });\n    //   const wsName = worlkBook.SheetNames[0];\n    //   const ws = worlkBook.Sheets[wsName];\n    //   const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 });\n    //   console.log({ dataParse });\n    //   // var AllSheetName = worlkBook.SheetNames;\n    //   debugger;\n    // };\n\n    // const fileSelect = (e) => {\n    //   const files = e.target.files;\n    //   fileData[\"fileName\"] = files[0].name;\n\n    //   const reader = new FileReader();\n    //   if (typeof FileList != \"undefined\") {\n    //     if (reader.readAsBinaryString) {\n    //       reader.onload = function (e) {\n    //         processExcelFile(e.target.result);\n    //       };\n    //     }\n    //   } else {\n    //     reader.onload = function (e) {\n    //       const data = \"\";\n    //       const bytes = new Uint8Array(e.target.result);\n    //       for (var i = 0; i < bytes.byteLength; i++) {\n    //         data += String.fromCharCode(bytes[i]);\n    //       }\n    //       processExcelFile(data);\n    //     };\n    //   }\n    //   // console.log(files);\n    // };\n\n    //f = file\n    var name = f.name;\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      // evt = on_file_select event\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      /* Update state */\n      console.log(\"Data>>>\" + data);\n    };\n    reader.readAsBinaryString(f);\n    const fileSelect = (e) => {};\n\n    return (\n      <>\n        <div className=\"content\">\n          <input type=\"file\" onChange={fileSelect}></input>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ComponentImport;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;;AAEA,OAAO,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;EAC7CG,MAAM,GAAG;IACP;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA,IAAIC,IAAI,GAAGC,CAAC,CAACD,IAAb;IACA,MAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;;IACAD,MAAM,CAACE,MAAP,GAAiBC,GAAD,IAAS;MACvB;;MACA;MACA,MAAMC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,MAAxB;MACA,MAAMC,EAAE,GAAGZ,IAAI,CAACa,IAAL,CAAUJ,IAAV,EAAgB;QAAEK,IAAI,EAAE;MAAR,CAAhB,CAAX;MACA;;MACA,MAAMC,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,CAAd,CAAf;MACA,MAAMC,EAAE,GAAGL,EAAE,CAACM,MAAH,CAAUH,MAAV,CAAX;MACA;;MACA,MAAMI,IAAI,GAAGnB,IAAI,CAACoB,KAAL,CAAWC,YAAX,CAAwBJ,EAAxB,EAA4B;QAAEK,MAAM,EAAE;MAAV,CAA5B,CAAb;MACA;;MACAC,OAAO,CAACC,GAAR,CAAY,YAAYL,IAAxB;IACD,CAZD;;IAaAd,MAAM,CAACoB,kBAAP,CAA0BrB,CAA1B;;IACA,MAAMsB,UAAU,GAAIC,CAAD,IAAO,CAAE,CAA5B;;IAEA,oBACE;MAAA,uBACE;QAAK,SAAS,EAAC,SAAf;QAAA,uBACE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAED;QAA7B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAOD;;AAhE4C;AAmE/C,eAAezB,eAAf"},"metadata":{},"sourceType":"module"}