{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/MasterDevSS4.ReactJS/master-dev-data/src/component-import/ComponentImport.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./ComponentImport.css\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ComponentImport() {\n  _s();\n\n  const [selectFile, setSeclectFie] = useState();\n\n  const fileSelect = e => {\n    e.preventDefault();\n\n    if (selectFile) {\n      if (selectFile.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n        const files = e.target.files;\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n          const data = \"\";\n          const bytes = new Uint8Array(e.target.result);\n\n          for (var i = 0; i < bytes.byteLength; i++) {\n            data += String.fromCharCode(bytes[i]);\n          }\n\n          const bstr = e.target.result;\n          const workbook = XLSX.read(bstr, {\n            type: \"binary\"\n          });\n          console.log(workbook);\n          const wsname = workbook.SheetNames[0];\n          const ws = workbook.Sheets[wsname];\n          const numberOfRecord = parseInt(workbook.Sheets.data[\"!ref\"].split(\"W\")[1]);\n\n          for (let i = 6; i <= numberOfRecord; i++) {\n            ws[`M${i}`].r = ws[`M${i}`].r.replaceAll(\",\", \" -\");\n            ws[`M${i}`].v = ws[`M${i}`].v.replaceAll(\",\", \" -\");\n            ws[`M${i}`].w = ws[`M${i}`].w.replaceAll(\",\", \" -\");\n            ws[`M${i}`].h = ws[`M${i}`].h.replaceAll(\",\", \" -\");\n          }\n\n          console.log(numberOfRecord);\n          const convertData = XLSX.utils.sheet_to_csv(ws, {\n            header: 1\n          });\n          const convertText = convertData.split(/\\r\\n|\\n/);\n          const resutlText = convertText[5].split(\",\").map(ele => ele.trim());\n          let childPropName = convertText[4].split(\",\");\n          childPropName = childPropName.filter(value => {\n            if (value) {\n              return value;\n            }\n          });\n          console.log(childPropName);\n          let propName = convertText[3].split(\",\"); // propName = propName.filter((value) => {\n          //   if (value) {\n          //     return value;\n          //   }\n          // });\n\n          const studentList = [];\n          const childPropNameDate = childPropName.splice(0, 3);\n\n          for (let i = 5; i < numberOfRecord; i++) {\n            studentList.push(convertText[i].split(\",\").map(ele => ele.trim()));\n          }\n\n          console.log(studentList);\n          studentList.map(student => {\n            const studentObject = {};\n            let i = 0;\n\n            while (i < propName.length) {\n              if (propName[i] === \"Ngày sinh\") {\n                studentObject[propName[i]] = {\n                  [childPropNameDate[0]]: student[i],\n                  [childPropNameDate[1]]: student[++i],\n                  [childPropNameDate[2]]: student[++i]\n                };\n              } else {\n                if (propName[i] === \"Điểm sơ tuyển vòng 1\") {\n                  studentObject[propName[i]] = {\n                    [childPropName[0]]: student[i],\n                    [childPropName[1]]: student[++i],\n                    [childPropName[2]]: student[++i],\n                    [childPropName[3]]: student[++i],\n                    [childPropName[4]]: student[++i],\n                    [childPropName[5]]: student[++i],\n                    [childPropName[6]]: student[++i],\n                    [childPropName[7]]: student[++i]\n                  };\n                } else {\n                  studentObject[propName[i]] = student[i];\n                  i++;\n                }\n              }\n            }\n\n            delete studentObject[\"\"];\n            console.log(studentObject);\n            const requestOptions = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(studentObject)\n            };\n            fetch(\"http://localhost:9000/datastudent\", requestOptions).then(response => response.json());\n          });\n          alert(\"Import thành công\");\n        };\n\n        reader.readAsBinaryString(selectFile);\n      } else {\n        alert(\"File phải là định dạng .xlsx\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          setSeclectFie(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fileSelect,\n        children: \"import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ComponentImport, \"Hbec3m83DA8La9W4rK65sQvOVtU=\");\n\n_c = ComponentImport;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentImport\");","map":{"version":3,"names":["useState","XLSX","ComponentImport","selectFile","setSeclectFie","fileSelect","e","preventDefault","type","files","target","reader","FileReader","onload","data","bytes","Uint8Array","result","i","byteLength","String","fromCharCode","bstr","workbook","read","console","log","wsname","SheetNames","ws","Sheets","numberOfRecord","parseInt","split","r","replaceAll","v","w","h","convertData","utils","sheet_to_csv","header","convertText","resutlText","map","ele","trim","childPropName","filter","value","propName","studentList","childPropNameDate","splice","push","student","studentObject","length","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","alert","readAsBinaryString"],"sources":["/Users/user/Documents/MasterDevSS4.ReactJS/master-dev-data/src/component-import/ComponentImport.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./ComponentImport.css\";\nimport * as XLSX from \"xlsx\";\n\nexport default function ComponentImport() {\n  const [selectFile, setSeclectFie] = useState();\n  const fileSelect = (e) => {\n    e.preventDefault();\n    if (selectFile) {\n      if (\n        selectFile.type ===\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      ) {\n        const files = e.target.files;\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          const data = \"\";\n          const bytes = new Uint8Array(e.target.result);\n          for (var i = 0; i < bytes.byteLength; i++) {\n            data += String.fromCharCode(bytes[i]);\n          }\n          const bstr = e.target.result;\n          const workbook = XLSX.read(bstr, {\n            type: \"binary\",\n          });\n          console.log(workbook);\n          const wsname = workbook.SheetNames[0];\n          const ws = workbook.Sheets[wsname];\n          const numberOfRecord = parseInt(\n            workbook.Sheets.data[\"!ref\"].split(\"W\")[1]\n          );\n          for (let i = 6; i <= numberOfRecord; i++) {\n            ws[`M${i}`].r = ws[`M${i}`].r.replaceAll(\",\", \" -\");\n            ws[`M${i}`].v = ws[`M${i}`].v.replaceAll(\",\", \" -\");\n            ws[`M${i}`].w = ws[`M${i}`].w.replaceAll(\",\", \" -\");\n            ws[`M${i}`].h = ws[`M${i}`].h.replaceAll(\",\", \" -\");\n          }\n          console.log(numberOfRecord);\n\n          const convertData = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n          const convertText = convertData.split(/\\r\\n|\\n/);\n\n          const resutlText = convertText[5].split(\",\").map((ele) => ele.trim());\n\n          let childPropName = convertText[4].split(\",\");\n          childPropName = childPropName.filter((value) => {\n            if (value) {\n              return value;\n            }\n          });\n          console.log(childPropName);\n\n          let propName = convertText[3].split(\",\");\n          // propName = propName.filter((value) => {\n          //   if (value) {\n          //     return value;\n          //   }\n          // });\n          const studentList = [];\n          const childPropNameDate = childPropName.splice(0, 3);\n          for (let i = 5; i < numberOfRecord; i++) {\n            studentList.push(\n              convertText[i].split(\",\").map((ele) => ele.trim())\n            );\n          }\n          console.log(studentList);\n          studentList.map((student) => {\n            const studentObject = {};\n            let i = 0;\n\n            while (i < propName.length) {\n              if (propName[i] === \"Ngày sinh\") {\n                studentObject[propName[i]] = {\n                  [childPropNameDate[0]]: student[i],\n                  [childPropNameDate[1]]: student[++i],\n                  [childPropNameDate[2]]: student[++i],\n                };\n              } else {\n                if (propName[i] === \"Điểm sơ tuyển vòng 1\") {\n                  studentObject[propName[i]] = {\n                    [childPropName[0]]: student[i],\n                    [childPropName[1]]: student[++i],\n                    [childPropName[2]]: student[++i],\n                    [childPropName[3]]: student[++i],\n                    [childPropName[4]]: student[++i],\n                    [childPropName[5]]: student[++i],\n                    [childPropName[6]]: student[++i],\n                    [childPropName[7]]: student[++i],\n                  };\n                } else {\n                  studentObject[propName[i]] = student[i];\n                  i++;\n                }\n              }\n            }\n\n            delete studentObject[\"\"];\n            console.log(studentObject);\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(studentObject),\n            };\n            fetch(\"http://localhost:9000/datastudent\", requestOptions).then(\n              (response) => response.json()\n            );\n          });\n          alert(\"Import thành công\");\n        };\n\n        reader.readAsBinaryString(selectFile);\n      } else {\n        alert(\"File phải là định dạng .xlsx\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"content\">\n        <input\n          type=\"file\"\n          onChange={(e) => {\n            setSeclectFie(e.target.files[0]);\n          }}\n        ></input>\n        <button onClick={fileSelect}>import</button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}