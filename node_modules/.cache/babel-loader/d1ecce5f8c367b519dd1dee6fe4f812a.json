{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/MasterDevSS4.ReactJS/master-dev-data/src/component-import/ComponentImport.js\";\nimport React, { Component } from \"react\";\nimport \"./ComponentImport.css\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ComponentImport extends Component {\n  render() {\n    // const fileData = {};\n    // const processExcelFile = (data) => {\n    //   var worlkBook = XLSX.read(data, { type: \"binary \" });\n    //   const wsName = worlkBook.SheetNames[0];\n    //   const ws = worlkBook.Sheets[wsName];\n    //   const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 });\n    //   console.log({ dataParse });\n    //   // var AllSheetName = worlkBook.SheetNames;\n    //   debugger;\n    // };\n    // const fileSelect = (e) => {\n    //   const files = e.target.files;\n    //   fileData[\"fileName\"] = files[0].name;\n    //   const reader = new FileReader();\n    //   if (typeof FileList != \"undefined\") {\n    //     if (reader.readAsBinaryString) {\n    //       reader.onload = function (e) {\n    //         processExcelFile(e.target.result);\n    //       };\n    //     }\n    //   } else {\n    //     reader.onload = function (e) {\n    //       const data = \"\";\n    //       const bytes = new Uint8Array(e.target.result);\n    //       for (var i = 0; i < bytes.byteLength; i++) {\n    //         data += String.fromCharCode(bytes[i]);\n    //       }\n    //       processExcelFile(data);\n    //     };\n    //   }\n    //   // console.log(files);\n    // };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\nexport default ComponentImport;","map":{"version":3,"names":["React","Component","XLSX","ComponentImport","render"],"sources":["/Users/user/Documents/MasterDevSS4.ReactJS/master-dev-data/src/component-import/ComponentImport.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./ComponentImport.css\";\nimport * as XLSX from \"xlsx\";\n\nexport class ComponentImport extends Component {\n  render() {\n    // const fileData = {};\n\n    // const processExcelFile = (data) => {\n    //   var worlkBook = XLSX.read(data, { type: \"binary \" });\n    //   const wsName = worlkBook.SheetNames[0];\n    //   const ws = worlkBook.Sheets[wsName];\n    //   const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 });\n    //   console.log({ dataParse });\n    //   // var AllSheetName = worlkBook.SheetNames;\n    //   debugger;\n    // };\n\n    // const fileSelect = (e) => {\n    //   const files = e.target.files;\n    //   fileData[\"fileName\"] = files[0].name;\n\n    //   const reader = new FileReader();\n    //   if (typeof FileList != \"undefined\") {\n    //     if (reader.readAsBinaryString) {\n    //       reader.onload = function (e) {\n    //         processExcelFile(e.target.result);\n    //       };\n    //     }\n    //   } else {\n    //     reader.onload = function (e) {\n    //       const data = \"\";\n    //       const bytes = new Uint8Array(e.target.result);\n    //       for (var i = 0; i < bytes.byteLength; i++) {\n    //         data += String.fromCharCode(bytes[i]);\n    //       }\n    //       processExcelFile(data);\n    //     };\n    //   }\n    //   // console.log(files);\n    // };\n\n    return (\n      <>\n        <div className=\"content\">\n          {/* <input type=\"file\" onChange={fileSelect}></input> */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ComponentImport;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;;AAEA,OAAO,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;EAC7CG,MAAM,GAAG;IACP;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,oBACE;MAAA,uBACE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAOD;;AA7C4C;AAgD/C,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}