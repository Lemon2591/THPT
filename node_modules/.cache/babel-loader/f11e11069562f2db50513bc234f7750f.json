{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/MasterDevSS4.ReactJS/master-dev-data/src/component-import/ComponentImport.js\";\nimport React, { Component } from \"react\";\nimport \"./ComponentImport.css\";\nimport { XLSX$Utils } from \"xlsx\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ComponentImport extends Component {\n  render() {\n    const fileData = {};\n\n    const processExcelFile = () => {\n      var worlkBook = XLSX.read(dat, type);\n    };\n\n    const fileSelect = e => {\n      const files = e.target.files;\n      fileData[\"fileName\"] = files[0].name;\n\n      if (typeof FileList != \"undefined\") {\n        const reader = new FileReader();\n\n        if (reader.readAsBinaryString) {\n          reader.onload = function (e) {\n            processExcelFile(e.target.result);\n          };\n        }\n      } else {\n        reader.onload = function (e) {\n          const data = \"\";\n          const bytes = new Uint8Array(e.target.result);\n\n          for (var i = 0; i < bytes.byteLength; i++) {\n            data += String.fromCharCode(bytes[i]);\n          }\n\n          processExcelFile(data);\n        };\n      }\n\n      console.log(files);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: fileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\nexport default ComponentImport;","map":{"version":3,"names":["React","Component","XLSX$Utils","XLSX","ComponentImport","render","fileData","processExcelFile","worlkBook","read","dat","type","fileSelect","e","files","target","name","FileList","reader","FileReader","readAsBinaryString","onload","result","data","bytes","Uint8Array","i","byteLength","String","fromCharCode","console","log"],"sources":["/Users/user/Documents/MasterDevSS4.ReactJS/master-dev-data/src/component-import/ComponentImport.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./ComponentImport.css\";\nimport { XLSX$Utils } from \"xlsx\";\nimport * as XLSX from \"xlsx\";\n\nexport class ComponentImport extends Component {\n  render() {\n    const fileData = {};\n\n    const processExcelFile = () => {\n      var worlkBook = XLSX.read(dat, (type: \"bi\"));\n    };\n\n    const fileSelect = (e) => {\n      const files = e.target.files;\n      fileData[\"fileName\"] = files[0].name;\n\n      if (typeof FileList != \"undefined\") {\n        const reader = new FileReader();\n        if (reader.readAsBinaryString) {\n          reader.onload = function (e) {\n            processExcelFile(e.target.result);\n          };\n        }\n      } else {\n        reader.onload = function (e) {\n          const data = \"\";\n          const bytes = new Uint8Array(e.target.result);\n          for (var i = 0; i < bytes.byteLength; i++) {\n            data += String.fromCharCode(bytes[i]);\n          }\n          processExcelFile(data);\n        };\n      }\n      console.log(files);\n    };\n\n    return (\n      <>\n        <div className=\"content\">\n          <input type=\"file\" onChange={fileSelect}></input>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ComponentImport;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;;AAEA,OAAO,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;EAC7CI,MAAM,GAAG;IACP,MAAMC,QAAQ,GAAG,EAAjB;;IAEA,MAAMC,gBAAgB,GAAG,MAAM;MAC7B,IAAIC,SAAS,GAAGL,IAAI,CAACM,IAAL,CAAUC,GAAV,EAAgBC,IAAhB,CAAhB;IACD,CAFD;;IAIA,MAAMC,UAAU,GAAIC,CAAD,IAAO;MACxB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;MACAR,QAAQ,CAAC,UAAD,CAAR,GAAuBQ,KAAK,CAAC,CAAD,CAAL,CAASE,IAAhC;;MAEA,IAAI,OAAOC,QAAP,IAAmB,WAAvB,EAAoC;QAClC,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;QACA,IAAID,MAAM,CAACE,kBAAX,EAA+B;UAC7BF,MAAM,CAACG,MAAP,GAAgB,UAAUR,CAAV,EAAa;YAC3BN,gBAAgB,CAACM,CAAC,CAACE,MAAF,CAASO,MAAV,CAAhB;UACD,CAFD;QAGD;MACF,CAPD,MAOO;QACLJ,MAAM,CAACG,MAAP,GAAgB,UAAUR,CAAV,EAAa;UAC3B,MAAMU,IAAI,GAAG,EAAb;UACA,MAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAeZ,CAAC,CAACE,MAAF,CAASO,MAAxB,CAAd;;UACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,UAA1B,EAAsCD,CAAC,EAAvC,EAA2C;YACzCH,IAAI,IAAIK,MAAM,CAACC,YAAP,CAAoBL,KAAK,CAACE,CAAD,CAAzB,CAAR;UACD;;UACDnB,gBAAgB,CAACgB,IAAD,CAAhB;QACD,CAPD;MAQD;;MACDO,OAAO,CAACC,GAAR,CAAYjB,KAAZ;IACD,CAtBD;;IAwBA,oBACE;MAAA,uBACE;QAAK,SAAS,EAAC,SAAf;QAAA,uBACE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEF;QAA7B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAOD;;AAvC4C;AA0C/C,eAAeR,eAAf"},"metadata":{},"sourceType":"module"}